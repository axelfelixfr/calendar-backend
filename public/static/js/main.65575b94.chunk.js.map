{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/calendar-messages-es.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","assets/calendar.jpg","assets/calendar.svg","components/auth/RegisterScreen.js","components/auth/LoginScreen.js","router/AuthRouter.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","Navbar","useDispatch","name","useSelector","className","AppBar","position","Toolbar","Icon","Typography","variant","Button","color","endIcon","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","endEvent","clone","initEvent","notes","CalendarModal","useState","setDateStart","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","target","value","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","a","resp","json","ok","msg","console","log","getState","uid","evento","_id","eventStartAddNew","autoComplete","DateTimePicker","label","inputVariant","onChange","format","fullWidth","minDate","TextField","required","helperText","error","multiline","maxrows","rows","AddNewFab","Fab","aria-label","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","onDoubleClickEvent","onSelectEvent","onView","setItem","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","useStyles","makeStyles","theme","form","width","marginTop","spacing","submit","margin","RegisterScreen","classes","schema","yup","shape","min","max","matches","email","password","passwordConfirm","oneOf","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","src","CalendarIcon","alt","height","noValidate","Date","getTime","startRegister","Grid","container","item","xs","autoFocus","message","sm","LoginScreen","startLogin","root","image","backgroundImage","Calendar","backgroundRepeat","palette","grey","backgroundSize","backgroundPosition","paper","flexDirection","alignItems","AuthRouter","CssBaseline","md","Paper","elevation","square","exact","path","AppRouter","libInstance","utils","MomentUtils","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65575b94.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Event clear logout',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Event loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n            \r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        //     break;\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n/* \r\n    {\r\n        id: new Date().getTime(),\r\n        title: 'Cumpleaños del jefe',\r\n        start: moment().toDate(),\r\n        end: moment().add(2, 'hours').toDate(),\r\n        bgColor: '#fafafa',\r\n        user: {\r\n            _id: '123',\r\n            name: 'Axel'\r\n        }\r\n    }\r\n*/\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n    \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [ ...state.events, action.payload ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state, \r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${ baseUrl }/${ endpoint }`; // ${ localhost:4000/api } / ${ auth/new }\r\n\r\n    if(method === 'GET'){\r\n        // Si es un GET el method, simplemente retornamos el producto de la petición fetch\r\n        return fetch(url);\r\n    \r\n    } else {\r\n\r\n        // Si NO entra a el method GET, por lo tanto entra aquí al ser POST, PUT, DELETE, etc\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }) // En los headers, el backend de mi aplicación usa JSON por lo tanto usamos la configuración -> 'Content-type': 'application/json'\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${ baseUrl }/${ endpoint }`; // ${ localhost:4000/api } / ${ auth/new }\r\n    const token = localStorage.getItem('token') || ''; \r\n\r\n    if(method === 'GET'){\r\n        // Si es un GET el method, simplemente retornamos el producto de la petición fetch\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    \r\n    } else {\r\n\r\n        // Si NO entra a el method GET, por lo tanto entra aquí al ser POST, PUT, DELETE, etc\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        }) // En los headers, el backend de mi aplicación usa JSON por lo tanto usamos la configuración -> 'Content-type': 'application/json'\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from \"moment\";\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate()\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST')\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                dispatch(eventAddNew(event));\r\n            }\r\n            \r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos);\r\n\r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from './../types/types';\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n\r\n            if(body.msg){\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n            if(body.errors){\r\n                if(body.errors.email){\r\n                    Swal.fire('Error', body.errors.email.msg, 'error');\r\n\r\n                } else if(body.errors.password){\r\n                    Swal.fire('Error', body.errors.password.msg, 'error');\r\n                }\r\n            }\r\n\r\n            console.log(body);\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', { name, email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import { AppBar, Button, Icon, Toolbar, Typography } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"mb-3\">\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <Icon>person</Icon> <span className=\"ml-2\"></span>\r\n\r\n                        <Typography variant=\"h6\">{ name }</Typography>\r\n                    </div>\r\n                                  \r\n                    <div className=\"ml-auto\">\r\n                        <Button variant=\"contained\" color=\"secondary\" \r\n                                endIcon={<Icon>logout</Icon>} onClick={ handleLogout }\r\n                        >Salir\r\n                        </Button>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const { title, user } = event\r\n\r\n    return (\r\n        <div>\r\n            <span>{ title }</span>\r\n            <strong>- { user.name }</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal, });\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/events';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport { Button, Icon, TextField } from '@material-ui/core';\r\n\r\n// Estilos para el modal sacados en la documentación npm del modal, \"https://www.npmjs.com/package/react-modal\"\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n};\r\n\r\n// Establecemos el id de la aplicación para pasarle el elemento del modal \r\nModal.setAppElement('#root');\r\n\r\n// Creamos una constante para obtener el momento actual aunque redondeando los minutos y segundos con (.minutes(0).seconds(0))\r\n// Con add(1, 'hours') agregamos una hora para el evento\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\n\r\nconst endEvent = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: endEvent.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    // Al state dateStart le pasamos la constante now del momento actual y con el método toDate() obtenemos la fecha completa \r\n    const [, setDateStart] = useState(now.toDate())\r\n\r\n    const [, setDateEnd] = useState(endEvent.toDate());\r\n\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n \r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e); // Cambiamos la fecha con el setDateStart pasandole el evento\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n        \r\n        // Con isSameOrAfter() preguntamos si momentStart es igual o esta después de la fecha de momentEnd\r\n        // Si esto es así, se trata de un error, y no debería de enviarse el formulario\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('Error', 'La fecha final debe ser mayor a la fecha de inicio', 'error');\r\n        }\r\n        \r\n        if(title.trim().length < 2){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    } \r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={ closeModal }\r\n            style={ customStyles }\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1 className=\"animate__animated animate__backInLeft\"> { (activeEvent) ? 'Editar evento' : 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form id=\"eventoSubmit\" \r\n                  className=\"container animate__animated animate__fadeInUp animate__fast\"\r\n                  onSubmit={ handleSubmitForm } autoComplete=\"off\"          \r\n            >\r\n\r\n                <DateTimePicker\r\n                    label=\"Fecha y hora inicio\"\r\n                    inputVariant=\"outlined\"\r\n                    value={start}\r\n                    onChange={handleStartDateChange}\r\n                    format=\"DD/MM/YYYY hh:mm a\"\r\n                    fullWidth\r\n                />\r\n\r\n                <div className=\"my-3\">\r\n                    <DateTimePicker\r\n                        label=\"Fecha y hora fin\"\r\n                        inputVariant=\"outlined\"\r\n                        value={end}\r\n                        onChange={handleEndDateChange}\r\n                        format=\"DD/MM/YYYY hh:mm a\"\r\n                        fullWidth\r\n                        minDate={start}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <TextField\r\n                        required\r\n                        name=\"title\"\r\n                        label=\"Título\"\r\n                        helperText=\"Una descripción corta\"\r\n                        variant=\"outlined\"\r\n                        error={!titleValid}\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                                                    \r\n                <div className=\"mb-3\">\r\n                    <TextField\r\n                        label=\"Notas\"\r\n                        name=\"notes\"\r\n                        multiline\r\n                        helperText=\"Información adicional\"\r\n                        maxrows={8}\r\n                        rows={5}\r\n                        variant=\"outlined\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                                                            \r\n                <div className=\"text-center\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        endIcon={<Icon>send</Icon>}\r\n                    >Guardar</Button>\r\n                </div>\r\n                                                        \r\n            </form>\r\n      </Modal>\r\n    )\r\n}\r\n","import { Fab, Icon } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const modalOpenButton = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <div className=\"fab\">\r\n            <Fab color=\"primary\" aria-label=\"add\" onClick={ modalOpenButton }>\r\n                <Icon>add</Icon>\r\n            </Fab>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Icon } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <div className=\"fab-danger\">\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={ handleDelete }\r\n                endIcon={<Icon>delete</Icon>}\r\n            >Borrar\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer  }  from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es-mx'\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // Obtenemos tanto los eventos (events) como si esta activado (activeEvent) a través del useSelector de react-redux\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n\r\n    // Almacenamos el última vista del calendario (dia, semana, mes) en el localStorage para recordar la última vez donde estuvo el usuario\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n\r\n    // Con el onDoubleClickEvent del componente <Calendar /> podemos hacer un dispatch para abrir el modal\r\n    const onDoubleClick = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    // Con el onSelectEvent del componente <Calendar /> podemos hacer un dispatch para activar el evento seleccionado\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        // El e (event) sería la vista actual donde esta el usuario, por ejemplo: día, semana, mes, etc\r\n        setLastView(e);\r\n\r\n        // Almacenamos esa vista en el localStorage para recordarlo si es que ingresa nuevamente\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    // Con el onSelectSlot del componente <Calendar /> podemos hacer un dispatch para limpiar el evento activo\r\n    const onSelectSlot = () => {\r\n        // La action eventClearActiveEvent sirve cuando se borra algun evento, se debe borrar de igual forma su activación\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#303C43',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            {\r\n                (!activeEvent) && <AddNewFab />\r\n            }\r\n            \r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n            \r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({isAuthenticated, component: Component, ...rest}) => {\r\n\r\n    // Pasamos las props de Route con el operador spread (...rest)\r\n    // Ahora hacemos la negación de isAuthenticated con \"!isAuthenticated\"\r\n    // Para que saber si puede ver las rutas públicas o no\r\n    // Si isAuthenticated esta en true entonces que lo redireccione a '/' que es una ruta privada\r\n    // Si no esta autenticado entonces que muestre el componente que se le pase por las props, que\r\n    // en este caso sería AuthRouter\r\n    \r\n    return (\r\n        <Route { ...rest }\r\n                component={(props) => ((isAuthenticated) \r\n                                      ? (<Redirect to='/' />)\r\n                                      : (<Component { ...props }/>)\r\n                )}    \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n// Component lo declaramos como function en las propTypes ya que se trata de functional components","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({isAuthenticated, component: Component, ...rest}) => {\r\n\r\n    // Al Route le pasamos todas sus props con el operador spread (...rest)\r\n    // Si isAuthenticated esta en true, significa que esta autenticado, por lo tanto se puede mostrar el componente que quiere ver\r\n    // Si isAuthenticated esta en false, significa que no esta autenticado, por lo tanto con el <Redirect /> de react-router lo manda al login para que inicie sesión\r\n    return (\r\n        <Route { ...rest }\r\n                component={(props) => ((isAuthenticated) \r\n                                      ? (<Component { ...props }/>)\r\n                                      : (<Redirect to='/auth' />)\r\n                )}    \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n// Component lo declaramos como function en las propTypes ya que se trata de functional components","export default __webpack_public_path__ + \"static/media/calendar.dd219b4d.jpg\";","export default __webpack_public_path__ + \"static/media/calendar.75bc70db.svg\";","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Grid, makeStyles, TextField, Typography } from '@material-ui/core'\r\nimport Swal from 'sweetalert2';\r\nimport { startRegister } from '../../actions/auth';\r\nimport { Link } from 'react-router-dom';\r\nimport CalendarIcon from '../../assets/calendar.svg';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport const RegisterScreen = () => {\r\n    // MaterialUI\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // Validación\r\n    const schema = yup.object().shape({\r\n        name: yup.string().min(4).max(30).required().matches(/^[a-zA-Z\\s\\xE1\\xE9\\xED\\xF3\\xFA\\xC1\\xC9\\xCD\\xD3\\xDA]{3,}$/, 'Must be only letters'),\r\n        email: yup.string().email().required(),\r\n        password: yup.string().min(8).max(32).required().matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/, 'The password must be at least 8 letters long and include at least one capital letter and one number'),\r\n        passwordConfirm: yup.string().oneOf([yup.ref('password'), null], \"passwords don't match!\")\r\n    });\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const handleRegister = (data) => {\r\n        const { name, email, password, passwordConfirm } = data;\r\n\r\n        if(password !== passwordConfirm){\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n        }\r\n\r\n        dispatch(startRegister(name, email, password));\r\n    }\r\n    \r\n    \r\n    return (\r\n        <>\r\n          <img src={ CalendarIcon } alt=\"Calendario\" height=\"40\" width=\"40\" />\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Registro\r\n          </Typography>\r\n            <form className={classes.form} noValidate onSubmit={ handleSubmit(handleRegister) }>\r\n            {/* <div className=\"animate__animated animate__fadeInDown\"> */}\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            id=\"name\"\r\n                            label=\"Nombre\"\r\n                            autoFocus\r\n                            name=\"name\"\r\n                            {...register(\"name\")}\r\n                            error={errors.name}\r\n                            helperText={ errors.name && errors.name?.message}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Correo electrónico\"\r\n                            autoComplete=\"email\"\r\n                            name=\"email\"\r\n                            {...register(\"email\")}\r\n                            error={errors.email}\r\n                            helperText={ errors.email && errors.email?.message}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            label=\"Contraseña\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            name=\"password\"\r\n                            {...register(\"password\")}\r\n                            error={errors.password}\r\n                            helperText={ errors.password && errors.password?.message}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            label=\"Confirmar contraseña\"\r\n                            type=\"password\"\r\n                            id=\"passwordConfirm\"\r\n                            autoComplete=\"current-password\"\r\n                            name=\"passwordConfirm\"\r\n                            {...register(\"passwordConfirm\")}\r\n                            error={errors.passwordConfirm}\r\n                            helperText={ errors.passwordConfirm && errors.passwordConfirm?.message}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        >Registrarse\r\n                    </Button>\r\n                    {/* </div> */}\r\n            </form>\r\n          \r\n          <Grid container>\r\n              <Grid item>\r\n                <Link to=\"/auth/login\">¿Ya estás registrado? Ingresa aquí</Link>\r\n              </Grid>\r\n          </Grid>\r\n        </>\r\n    )\r\n}\r\n","import { Button, Grid, makeStyles, TextField, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin } from '../../actions/auth';\r\nimport { Link } from 'react-router-dom';\r\nimport CalendarIcon from '../../assets/calendar.svg';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    // MaterialUI\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // Validación\r\n    const schema = yup.object().shape({\r\n        email: yup.string().email().required(),\r\n        password: yup.string().min(8).max(32).required().matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/, 'The password must be at least 8 letters long and include at least one capital letter and one number'),\r\n    });\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const handleLogin = (data) => {\r\n        const { email, password } = data;\r\n\r\n        dispatch(startLogin(email, password));\r\n    }\r\n    \r\n    return (\r\n        <>\r\n          <img src={ CalendarIcon } alt=\"Calendario\" height=\"40\" width=\"40\" />\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Ingreso\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={ handleSubmit(handleLogin) }>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Correo electrónico\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              name=\"email\"\r\n              error={errors.email}\r\n              {...register(\"email\")}\r\n              helperText={ errors.email && errors.email?.message}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"password\"\r\n              label=\"Contraseña\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              name=\"password\"\r\n              error={errors.password}\r\n              helperText={ errors.password && errors.password?.message}\r\n              {...register(\"password\")}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Entrar\r\n            </Button>\r\n          </form>\r\n          <Grid container>\r\n              <Grid item>\r\n                <Link to=\"/auth/register\">¿Aún no te haz registrado? Crea una cuenta</Link>\r\n              </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import { CssBaseline, Grid, makeStyles, Paper } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Calendar from '../assets/calendar.jpg';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: '100vh',\r\n    },\r\n    image: {\r\n      backgroundImage: `url(${Calendar})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    }\r\n}));\r\n\r\nexport const AuthRouter = () => {\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className=\"animate__animated animate__fadeIn\">\r\n                    <div className={classes.paper}>\r\n                        <Switch>\r\n                            <Route exact path=\"/auth/login\" component={ LoginScreen } />\r\n\r\n                            <Route exact path=\"/auth/register\" component={ RegisterScreen } />\r\n                            \r\n                            <Redirect to=\"/auth/login\"/>\r\n                        </Switch>               \r\n                    </div>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { CalendarScreen } from './../components/calendar/CalendarScreen';\r\nimport { startChecking } from './../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport moment from 'moment';\r\nimport MomentUtils from '@date-io/moment';\r\nimport \"moment/locale/es-mx\";\r\nimport { AuthRouter } from './AuthRouter';\r\n\r\nmoment.locale(\"es-mx\");\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(startChecking());\r\n    \r\n    }, [dispatch]);\r\n\r\n    if(checking){\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute isAuthenticated={ !!uid } path=\"/auth\"  component={ AuthRouter }/>\r\n\r\n                    <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n                        <PrivateRoute isAuthenticated={ !!uid } exact path=\"/\" component={ CalendarScreen } />\r\n                    </MuiPickersUtilsProvider>\r\n\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\nimport 'animate.css';\n\nReactDOM.render(<CalendarApp />,document.getElementById('root'));"],"sourceRoot":""}